// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	VoteRequest
	VoteRespond
	EntryRequest
	EntryResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type VoteRequest struct {
	Term         int64  `protobuf:"varint,1,opt,name=Term" json:"Term,omitempty"`
	CandidateID  string `protobuf:"bytes,2,opt,name=CandidateID" json:"CandidateID,omitempty"`
	LastLogIndex int64  `protobuf:"varint,3,opt,name=LastLogIndex" json:"LastLogIndex,omitempty"`
	LastLogTerm  int64  `protobuf:"varint,4,opt,name=LastLogTerm" json:"LastLogTerm,omitempty"`
}

func (m *VoteRequest) Reset()                    { *m = VoteRequest{} }
func (m *VoteRequest) String() string            { return proto1.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()               {}
func (*VoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VoteRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteRequest) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *VoteRequest) GetLastLogIndex() int64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *VoteRequest) GetLastLogTerm() int64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type VoteRespond struct {
	Term        int64 `protobuf:"varint,1,opt,name=Term" json:"Term,omitempty"`
	VoteGranted bool  `protobuf:"varint,2,opt,name=voteGranted" json:"voteGranted,omitempty"`
}

func (m *VoteRespond) Reset()                    { *m = VoteRespond{} }
func (m *VoteRespond) String() string            { return proto1.CompactTextString(m) }
func (*VoteRespond) ProtoMessage()               {}
func (*VoteRespond) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VoteRespond) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteRespond) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type EntryRequest struct {
	LeaderCommit int64  `protobuf:"varint,1,opt,name=LeaderCommit" json:"LeaderCommit,omitempty"`
	Term         int64  `protobuf:"varint,2,opt,name=Term" json:"Term,omitempty"`
	LeaderID     string `protobuf:"bytes,3,opt,name=LeaderID" json:"LeaderID,omitempty"`
	PrevLogIndex int64  `protobuf:"varint,4,opt,name=PrevLogIndex" json:"PrevLogIndex,omitempty"`
	PrevLogTerm  int64  `protobuf:"varint,5,opt,name=PrevLogTerm" json:"PrevLogTerm,omitempty"`
	Data         []byte `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *EntryRequest) Reset()                    { *m = EntryRequest{} }
func (m *EntryRequest) String() string            { return proto1.CompactTextString(m) }
func (*EntryRequest) ProtoMessage()               {}
func (*EntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EntryRequest) GetLeaderCommit() int64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

func (m *EntryRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *EntryRequest) GetLeaderID() string {
	if m != nil {
		return m.LeaderID
	}
	return ""
}

func (m *EntryRequest) GetPrevLogIndex() int64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *EntryRequest) GetPrevLogTerm() int64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *EntryRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntryResponse struct {
	Term    int64 `protobuf:"varint,1,opt,name=Term" json:"Term,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
}

func (m *EntryResponse) Reset()                    { *m = EntryResponse{} }
func (m *EntryResponse) String() string            { return proto1.CompactTextString(m) }
func (*EntryResponse) ProtoMessage()               {}
func (*EntryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EntryResponse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *EntryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto1.RegisterType((*VoteRequest)(nil), "proto.VoteRequest")
	proto1.RegisterType((*VoteRespond)(nil), "proto.VoteRespond")
	proto1.RegisterType((*EntryRequest)(nil), "proto.EntryRequest")
	proto1.RegisterType((*EntryResponse)(nil), "proto.EntryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Mgr service

type MgrClient interface {
	RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteRespond, error)
	AppendEntries(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*EntryResponse, error)
}

type mgrClient struct {
	cc *grpc.ClientConn
}

func NewMgrClient(cc *grpc.ClientConn) MgrClient {
	return &mgrClient{cc}
}

func (c *mgrClient) RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteRespond, error) {
	out := new(VoteRespond)
	err := grpc.Invoke(ctx, "/proto.Mgr/RequestVote", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mgrClient) AppendEntries(ctx context.Context, in *EntryRequest, opts ...grpc.CallOption) (*EntryResponse, error) {
	out := new(EntryResponse)
	err := grpc.Invoke(ctx, "/proto.Mgr/AppendEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Mgr service

type MgrServer interface {
	RequestVote(context.Context, *VoteRequest) (*VoteRespond, error)
	AppendEntries(context.Context, *EntryRequest) (*EntryResponse, error)
}

func RegisterMgrServer(s *grpc.Server, srv MgrServer) {
	s.RegisterService(&_Mgr_serviceDesc, srv)
}

func _Mgr_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MgrServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mgr/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MgrServer).RequestVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mgr_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MgrServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mgr/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MgrServer).AppendEntries(ctx, req.(*EntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Mgr",
	HandlerType: (*MgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestVote",
			Handler:    _Mgr_RequestVote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _Mgr_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

func init() { proto1.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xeb, 0xfe, 0xa3, 0xbd, 0xb6, 0x8b, 0x61, 0x88, 0x3a, 0x45, 0x9e, 0x3a, 0x75, 0x80,
	0x81, 0x05, 0x06, 0xd4, 0x22, 0x54, 0xa9, 0x48, 0xc8, 0x20, 0x76, 0x53, 0x9f, 0xaa, 0x0e, 0xb1,
	0x83, 0xed, 0x56, 0x20, 0xf1, 0x02, 0xbc, 0x13, 0x0f, 0x87, 0xec, 0x38, 0x91, 0x23, 0xc1, 0x14,
	0xdf, 0x4f, 0x97, 0xbb, 0xef, 0xfb, 0x0e, 0x66, 0x05, 0x5a, 0x2b, 0xf6, 0xb8, 0x2c, 0x8d, 0x76,
	0x9a, 0x0e, 0xc2, 0x87, 0x7d, 0x13, 0x98, 0xbc, 0x6a, 0x87, 0x1c, 0xdf, 0x8f, 0x68, 0x1d, 0xa5,
	0xd0, 0x7f, 0x41, 0x53, 0x64, 0x24, 0x27, 0x8b, 0x1e, 0x0f, 0x6f, 0x9a, 0xc3, 0x64, 0x25, 0x94,
	0x3c, 0x48, 0xe1, 0x70, 0xb3, 0xce, 0xba, 0x39, 0x59, 0x8c, 0x79, 0x8a, 0x28, 0x83, 0xe9, 0x56,
	0x58, 0xb7, 0xd5, 0xfb, 0x8d, 0x92, 0xf8, 0x91, 0xf5, 0xc2, 0xdf, 0x2d, 0xe6, 0xa7, 0xc4, 0x3a,
	0x2c, 0xe8, 0x87, 0x96, 0x14, 0xb1, 0x55, 0x2d, 0xc5, 0x96, 0x5a, 0xc9, 0xff, 0xa4, 0x9c, 0xb4,
	0xc3, 0x07, 0x23, 0x94, 0x43, 0x19, 0xa4, 0x8c, 0x78, 0x8a, 0xd8, 0x0f, 0x81, 0xe9, 0xbd, 0x72,
	0xe6, 0xb3, 0x76, 0xe4, 0xb5, 0xa1, 0x90, 0x68, 0x56, 0xba, 0x28, 0x0e, 0x2e, 0x8e, 0x6b, 0xb1,
	0x66, 0x55, 0x37, 0x59, 0x35, 0x87, 0x51, 0xd5, 0xb3, 0x59, 0x07, 0x3f, 0x63, 0xde, 0xd4, 0x7e,
	0xe6, 0x93, 0xc1, 0x53, 0xe3, 0xb7, 0x32, 0xd3, 0x62, 0x5e, 0x6a, 0xac, 0xc3, 0xe8, 0x41, 0xe5,
	0x37, 0x41, 0x7e, 0xeb, 0x5a, 0x38, 0x91, 0x0d, 0x73, 0xb2, 0x98, 0xf2, 0xf0, 0x66, 0xb7, 0x30,
	0x8b, 0xea, 0x7d, 0x08, 0x16, 0xff, 0x4c, 0x21, 0x83, 0xb3, 0xe7, 0xe3, 0x6e, 0x87, 0xd6, 0xc6,
	0x04, 0xea, 0xf2, 0xf2, 0x0b, 0x7a, 0x8f, 0x7b, 0x43, 0xaf, 0x61, 0x12, 0xed, 0xfb, 0x40, 0x29,
	0xad, 0x6e, 0xbe, 0x4c, 0x0e, 0x3d, 0x6f, 0xb3, 0x90, 0x38, 0xeb, 0xd0, 0x1b, 0x98, 0xdd, 0x95,
	0x25, 0x2a, 0xe9, 0x45, 0x1c, 0xd0, 0xd2, 0xf3, 0xd8, 0x96, 0x46, 0x3a, 0xbf, 0x68, 0xc3, 0x4a,
	0x29, 0xeb, 0xbc, 0x0d, 0x03, 0xbe, 0xfa, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x3f, 0xc4, 0x76, 0x33,
	0x6b, 0x02, 0x00, 0x00,
}
